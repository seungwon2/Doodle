{"version":3,"sources":["../../export/worker.js"],"names":["envConfig","require","global","__NEXT_DATA__","nextExport","path","pathMap","distDir","buildId","outDir","pagesDataDir","renderOpts","buildExport","serverRuntimeConfig","subFolders","serverless","results","ampValidations","query","originalQuery","page","filePath","ampPath","params","hasOrigQueryValues","Object","keys","length","queryWithAutoExportWarn","Error","headerMocks","headers","getHeader","setHeader","hasHeader","removeHeader","getHeaderNames","req","url","res","setConfig","publicRuntimeConfig","runtimeConfig","htmlFilename","sep","pageExt","pathExt","baseDir","htmlFilepath","promises","mkdir","recursive","html","curRenderOpts","renderMethod","renderToHTML","renderedDuringBuild","getStaticProps","curUrl","parse","format","Component","mod","getServerSideProps","SERVER_PROPS_EXPORT_ERROR","endsWith","renderReqToHTML","result","components","validateAmp","validatorPath","validator","AmpHtmlValidator","getInstance","validateString","errors","filter","e","severity","warnings","push","inAmpMode","ampSkipValidation","ampValidatorPath","hybridAmp","ampHtmlFilename","ampBaseDir","ampHtmlFilepath","access","_","ampHtml","includes","amp","writeFile","pageData","dataFile","replace","JSON","stringify","fromBuildExportRevalidate","revalidate","error","console"],"mappings":"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","sourcesContent":["import url from 'url'\nimport { extname, join, dirname, sep } from 'path'\nimport { renderToHTML } from '../next-server/server/render'\nimport { promises } from 'fs'\nimport AmpHtmlValidator from 'next/dist/compiled/amphtml-validator'\nimport { loadComponents } from '../next-server/server/load-components'\nimport { isDynamicRoute } from '../next-server/lib/router/utils/is-dynamic'\nimport { getRouteMatcher } from '../next-server/lib/router/utils/route-matcher'\nimport { getRouteRegex } from '../next-server/lib/router/utils/route-regex'\nimport { normalizePagePath } from '../next-server/server/normalize-page-path'\nimport { SERVER_PROPS_EXPORT_ERROR } from '../lib/constants'\nimport 'next/dist/next-server/server/node-polyfill-fetch'\n\nconst envConfig = require('../next-server/lib/runtime-config')\n\nglobal.__NEXT_DATA__ = {\n  nextExport: true,\n}\n\nexport default async function ({\n  path,\n  pathMap,\n  distDir,\n  buildId,\n  outDir,\n  pagesDataDir,\n  renderOpts,\n  buildExport,\n  serverRuntimeConfig,\n  subFolders,\n  serverless,\n}) {\n  let results = {\n    ampValidations: [],\n  }\n\n  try {\n    const { query: originalQuery = {} } = pathMap\n    const { page } = pathMap\n    const filePath = normalizePagePath(path)\n    const ampPath = `${filePath}.amp`\n    let query = { ...originalQuery }\n    let params\n\n    // We need to show a warning if they try to provide query values\n    // for an auto-exported page since they won't be available\n    const hasOrigQueryValues = Object.keys(originalQuery).length > 0\n    const queryWithAutoExportWarn = () => {\n      if (hasOrigQueryValues) {\n        throw new Error(\n          `\\nError: you provided query values for ${path} which is an auto-exported page. These can not be applied since the page can no longer be re-rendered on the server. To disable auto-export for this page add \\`getInitialProps\\`\\n`\n        )\n      }\n    }\n\n    // Check if the page is a specified dynamic route\n    if (isDynamicRoute(page) && page !== path) {\n      params = getRouteMatcher(getRouteRegex(page))(path)\n      if (params) {\n        // we have to pass these separately for serverless\n        if (!serverless) {\n          query = {\n            ...query,\n            ...params,\n          }\n        }\n      } else {\n        throw new Error(\n          `The provided export path '${path}' doesn't match the '${page}' page.\\nRead more: https://err.sh/zeit/next.js/export-path-mismatch`\n        )\n      }\n    }\n\n    const headerMocks = {\n      headers: {},\n      getHeader: () => ({}),\n      setHeader: () => {},\n      hasHeader: () => false,\n      removeHeader: () => {},\n      getHeaderNames: () => [],\n    }\n\n    const req = {\n      url: path,\n      ...headerMocks,\n    }\n    const res = {\n      ...headerMocks,\n    }\n\n    envConfig.setConfig({\n      serverRuntimeConfig,\n      publicRuntimeConfig: renderOpts.runtimeConfig,\n    })\n\n    let htmlFilename = `${filePath}${sep}index.html`\n    if (!subFolders) htmlFilename = `${filePath}.html`\n\n    const pageExt = extname(page)\n    const pathExt = extname(path)\n    // Make sure page isn't a folder with a dot in the name e.g. `v1.2`\n    if (pageExt !== pathExt && pathExt !== '') {\n      // If the path has an extension, use that as the filename instead\n      htmlFilename = path\n    } else if (path === '/') {\n      // If the path is the root, just use index.html\n      htmlFilename = 'index.html'\n    }\n\n    const baseDir = join(outDir, dirname(htmlFilename))\n    let htmlFilepath = join(outDir, htmlFilename)\n\n    await promises.mkdir(baseDir, { recursive: true })\n    let html\n    let curRenderOpts = {}\n    let renderMethod = renderToHTML\n\n    const renderedDuringBuild = (getStaticProps) => {\n      return !buildExport && getStaticProps && !isDynamicRoute(path)\n    }\n\n    if (serverless) {\n      const curUrl = url.parse(req.url, true)\n      req.url = url.format({\n        ...curUrl,\n        query: {\n          ...curUrl.query,\n          ...query,\n        },\n      })\n      const { Component: mod, getServerSideProps } = await loadComponents(\n        distDir,\n        buildId,\n        page,\n        serverless\n      )\n\n      if (getServerSideProps) {\n        throw new Error(`Error for page ${page}: ${SERVER_PROPS_EXPORT_ERROR}`)\n      }\n\n      // if it was auto-exported the HTML is loaded here\n      if (typeof mod === 'string') {\n        html = mod\n        queryWithAutoExportWarn()\n      } else {\n        // for non-dynamic SSG pages we should have already\n        // prerendered the file\n        if (renderedDuringBuild(mod.getStaticProps)) return results\n\n        if (mod.getStaticProps && !htmlFilepath.endsWith('.html')) {\n          // make sure it ends with .html if the name contains a dot\n          htmlFilename += '.html'\n          htmlFilepath += '.html'\n        }\n\n        renderMethod = mod.renderReqToHTML\n        const result = await renderMethod(\n          req,\n          res,\n          'export',\n          { ampPath },\n          params\n        )\n        curRenderOpts = result.renderOpts || {}\n        html = result.html\n      }\n\n      if (!html) {\n        throw new Error(`Failed to render serverless page`)\n      }\n    } else {\n      const components = await loadComponents(\n        distDir,\n        buildId,\n        page,\n        serverless\n      )\n\n      if (components.getServerSideProps) {\n        throw new Error(`Error for page ${page}: ${SERVER_PROPS_EXPORT_ERROR}`)\n      }\n\n      // for non-dynamic SSG pages we should have already\n      // prerendered the file\n      if (renderedDuringBuild(components.getStaticProps)) {\n        return results\n      }\n\n      // TODO: de-dupe the logic here between serverless and server mode\n      if (components.getStaticProps && !htmlFilepath.endsWith('.html')) {\n        // make sure it ends with .html if the name contains a dot\n        htmlFilepath += '.html'\n        htmlFilename += '.html'\n      }\n\n      if (typeof components.Component === 'string') {\n        html = components.Component\n        queryWithAutoExportWarn()\n      } else {\n        curRenderOpts = { ...components, ...renderOpts, ampPath, params }\n        html = await renderMethod(req, res, page, query, curRenderOpts)\n      }\n    }\n\n    const validateAmp = async (html, page, validatorPath) => {\n      const validator = await AmpHtmlValidator.getInstance(validatorPath)\n      const result = validator.validateString(html)\n      const errors = result.errors.filter((e) => e.severity === 'ERROR')\n      const warnings = result.errors.filter((e) => e.severity !== 'ERROR')\n\n      if (warnings.length || errors.length) {\n        results.ampValidations.push({\n          page,\n          result: {\n            errors,\n            warnings,\n          },\n        })\n      }\n    }\n\n    if (curRenderOpts.inAmpMode && !curRenderOpts.ampSkipValidation) {\n      await validateAmp(html, path, curRenderOpts.ampValidatorPath)\n    } else if (curRenderOpts.hybridAmp) {\n      // we need to render the AMP version\n      let ampHtmlFilename = `${ampPath}${sep}index.html`\n      if (!subFolders) {\n        ampHtmlFilename = `${ampPath}.html`\n      }\n      const ampBaseDir = join(outDir, dirname(ampHtmlFilename))\n      const ampHtmlFilepath = join(outDir, ampHtmlFilename)\n\n      try {\n        await promises.access(ampHtmlFilepath)\n      } catch (_) {\n        // make sure it doesn't exist from manual mapping\n        let ampHtml\n        if (serverless) {\n          req.url += (req.url.includes('?') ? '&' : '?') + 'amp=1'\n          ampHtml = (await renderMethod(req, res, 'export')).html\n        } else {\n          ampHtml = await renderMethod(\n            req,\n            res,\n            page,\n            { ...query, amp: 1 },\n            curRenderOpts\n          )\n        }\n\n        if (!curRenderOpts.ampSkipValidation) {\n          await validateAmp(ampHtml, page + '?amp=1')\n        }\n        await promises.mkdir(ampBaseDir, { recursive: true })\n        await promises.writeFile(ampHtmlFilepath, ampHtml, 'utf8')\n      }\n    }\n\n    if (curRenderOpts.pageData) {\n      const dataFile = join(\n        pagesDataDir,\n        htmlFilename.replace(/\\.html$/, '.json')\n      )\n\n      await promises.mkdir(dirname(dataFile), { recursive: true })\n      await promises.writeFile(\n        dataFile,\n        JSON.stringify(curRenderOpts.pageData),\n        'utf8'\n      )\n\n      if (curRenderOpts.hybridAmp) {\n        await promises.writeFile(\n          dataFile.replace(/\\.json$/, '.amp.json'),\n          JSON.stringify(curRenderOpts.pageData),\n          'utf8'\n        )\n      }\n    }\n    results.fromBuildExportRevalidate = curRenderOpts.revalidate\n\n    await promises.writeFile(htmlFilepath, html, 'utf8')\n    return results\n  } catch (error) {\n    console.error(\n      `\\nError occurred prerendering page \"${path}\". Read more: https://err.sh/next.js/prerender-error\\n` +\n        error\n    )\n    return { ...results, error: true }\n  }\n}\n"]}